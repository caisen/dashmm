OPEN QUESTIONS and TODO
TODO: Make the Array type work from inside HPX-5 threads also
TODO: Merge SourceRef and TargetRef. They are really just the same thing
      with different names. Call is ArrayRef?
TODO: Should we explicitly enforce the singleton nature of Evaluator?
TODO: currently it is impossible to use the same tree for different Evaluators.
      Do we want to decouple the tree?
TODO: Perhaps we want to parameterize the nodes with some user data? So
      the user can use the tree for other things as well.
TODO: Should we just make the evaluator into a functor? Instead of evaluate,
      we just overload ()?
TODO: Factor the bit in evaluate_handler() that gets the domain
TODO: In contribute for ExpansionLCO, can we change it so the user can just
      pass in the expansion?
TODO: Why is s_to_l_handler different than s_to_m_handler?
TODO: See if we can work out a better way to work with the consider list.
      All this to and from vectors is annoying.
TODO: change the data() member of ExpansionLCO to be lco(). Or change the loc()
      member of TargerLCO to data();


 (Recheck documentation)
 - This will need to happen. The documentation and the code has started to
   diverge somewhat. This means both the in-source stuff as well as the user
   guides.

 (Do we do a minor release on the template stuff?)
    I lean toward yes. v0.6?



Some notes about issues or future features

* We will need to improve the error handling in this thing quite a bit.
Basically any way that the user-facing methods can go wrong should return
sensible error where possible instead of just being assertions that fail.

* We really ought to hide all the internal interface stuff that has to be
exposed in header files separate from the users.


Interface Ideas


 * Eventually the expansion should have a method indicating the number of
   charges. And the number of outputs (phi, ax, ay, az, whatever)

 * Provide C bindings before too long

 * We should also in the near term get a base nearest neighbor search. This will
 be essential for SPH and Phil's MFV methods.
  This would be useful in much wider contexts, however.



Some more expansions

 * Do LaplaceCOM with acceleration instead (or both)
 * So LaplaceCOM with softened force (ala GADGET)
 * Do one for Ewald technique for periodic BCs
 * Do one for Short range forces

Some more methods

 * Can we do something more like GADGET's BH method?
 *
