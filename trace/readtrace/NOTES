TODO:

SOON
* Add the ability to ignore impulsive events (not a begin or end) when using
  the plotter or other output things. Perhaps we need to make a segmented
  intermediate representation.
* Make the plotter accept a list of segment types that are of interest
* Make the output class that will produce the percent utilization data

LATER
* Work out if the ZEROREF thing actually does anything. If it does not, remove
  it
* Add the ability to handle the Trace IO events to the system. To avoid some
  annoyance, we will probably put those also in the traceutils::dashmm
  namespace.


So the next step is to work out how to make this stuff useful.

 * Do I want to have a means to replace things with segments?
   Perhaps this is an operation after querying for a window of events.
   The user would ask for a window, and then segmentize the results. The
   segments would basically be pairs of iterators probably. This might need
   another member of Event to indicate the segment type. Presumably there
   would be no overlapping segments, but with differing event types, we might.

   Probably it would be required that the events of paired type would have
   to alternate start() end() and so on.

 * One thing that has to happen is that this needs to become much more
   resilient in error conditions. Eventually it would be nice to use this
   stuff in an interactive visualization tool, and so we would want graceful
   error situations.



NOTE:

This needs to have access to PNGWriter

http://pngwriter.sourceforge.net/
